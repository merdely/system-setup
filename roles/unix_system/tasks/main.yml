# unix_system tasks
---
- include_role: name=handlers
  when: handlers_role_imported is not defined
  tags: 'always'

- block:
    - block:
        - name: update apt cache
          apt:
            update_cache: true
            cache_valid_time: 3600
          become: true
          delay: 10
          register: result
          retries: 20
          tags:
            - 'packages'
            - 'updates'
          until: result is not failed
      rescue:
        - name: log update apt cache failure
          set_fact:
            task_failures: '{{ task_failures | default([]) | union(["update apt cache (debian/main.yml)"]) }}'
          changed_when: true
          notify: list failed tasks

    - name: set vim as the default editor on debian
      copy:
        content: |
          # Generated by /usr/bin/select-editor
          SELECTED_EDITOR="/usr/bin/vim.basic"
        dest: '~/.selected_editor'
      tags: 'editor'
  when: ansible_os_family == 'Debian'

- name: print common packages needed for installation
  debug:
    msg: |
      {{ system_pkgs_install['common'] | default([])
         | union(system_pkgs_install[ansible_system] | default([]))
         | union(system_pkgs_install[ansible_os_family] | default([]))
      }}
  tags: 'packages'
  when: |
    system_pkgs_install['common'] | default([])
    | union(system_pkgs_install[ansible_system] | default([]))
    | union(system_pkgs_install[ansible_os_family] | default([])) | length > 0

- name: install common packages needed for installation
  package:
    name: |
      {{ system_pkgs_install['common'] | default([])
         | union(system_pkgs_install[ansible_system] | default([]))
         | union(system_pkgs_install[ansible_os_family] | default([]))
      }}
    state: 'present'
  become: true
  delay: 10
  register: result
  retries: 20
  tags: 'packages'
  until: result is not failed
  when: |
    system_pkgs_install['common'] | default([])
    | union(system_pkgs_install[ansible_system] | default([]))
    | union(system_pkgs_install[ansible_os_family] | default([])) | length > 0

- name: determine if there are updates to install
  include_role:
    name: utilities
    tasks_from: _check_for_updates
  tags:
    - 'packages'
    - 'syspatch'
    - 'updates'

- name: add packages to custom install list
  include_role:
    name: utilities
    tasks_from: _custom_add_packages.yml
  with_items: '{{ system_custom_add_packages | default([]) }}'
  tags:
    - 'packages'
    - 'addpackages'

- name: add packages to custom removal list
  include_role:
    name: utilities
    tasks_from: _custom_remove_packages.yml
  with_items: '{{ system_custom_remove_packages | default([]) }}'
  tags:
    - 'packages'
    - 'removepackages'

- name: install custom files
  include_role:
    name: utilities
    tasks_from: _custom_files.yml
  with_items: '{{ system_custom_files | default([]) }}'
  tags:
    - 'configs'
    - 'customfiles'

- name: install custom includes
  include_role:
    name: utilities
    tasks_from: _custom_includes.yml
  with_items: '{{ system_custom_includes | default([]) }}'
  tags:
    - 'configs'
    - 'customincludes'

- name: install custom settings
  include_role:
    name: utilities
    tasks_from: _custom_settings.yml
  with_items: '{{ system_custom_settings | default([]) }}'
  tags:
    - 'configs'
    - 'customsettings'

- name: add custom repos
  include_role:
    name: utilities
    tasks_from: _custom_repos.yml
  with_items: '{{ system_custom_repos | default([]) }}'
  tags: 'customrepos'

- name: add users to groups
  include_role:
    name: utilities
    tasks_from: _custom_groups.yml
  with_items: '{{ system_custom_groups | default([]) }}'
  tags: 'customgroups'

- name: enable/start services
  include_role:
    name: utilities
    tasks_from: _custom_services.yml
  with_items: '{{ system_custom_services | default([]) }}'
  tags: 'customservices'

- name: install custom deb files
  include_role:
    name: utilities
    tasks_from: _custom_deb_files.yml
  with_items: '{{ system_custom_deb_files | default([]) }}'
  tags: 'debfiles'

- name: install custom certificates
  include_tasks: _install_custom_certs.yml
  with_items: '{{ custom_ssl_certs | default([]) }}'
  tags: 'cacert'

- name: install custom dns search domain
  include_tasks: _dns_search_domain.yml
  tags: 'dnssearch'
  when: dns_search_domain is defined
